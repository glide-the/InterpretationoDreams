{"analysis_store/data": {"fa39bc64-c7d4-42d7-bffc-5b27303f0f0a": {"__data__": {"id_": "fa39bc64-c7d4-42d7-bffc-5b27303f0f0a", "metadata": {}, "relationships": {}, "hash": "", "story_scenario_context": "### \u7b2c\u4e00\u6b65\uff1a\u63d0\u53d6\u5173\u952e\u4fe1\u606f\n1. **\u7814\u7a76\u65b9\u5411\u76f8\u5173**\uff1a\u793e\u4ea4\u5a92\u4f53\u4e2d\u7684\u7231\u60c5\u8868\u73b0\u3001\u5362\u66fc\u7231\u60c5\u8bed\u4e49\u5b66\u5728\u7535\u89c6\u7535\u5f71\u4e2d\u7684\u5e94\u7528\u3001\u6df1\u5165\u7814\u7a76\u5362\u66fc\u7406\u8bba\u53ca\u5176\u5728\u793e\u4f1a\u5b66\u7814\u7a76\u4e2d\u7684\u6f5c\u5728\u5e94\u7528\u3001\u63a2\u8ba8\u5362\u66fc\u7406\u8bba\u548c\u793e\u4f1a\u5b66\u7684\u4ea4\u53c9\u70b9\u3002\n2. **\u5173\u8054\u5173\u7cfb\u76f8\u5173**\uff1a\u5362\u66fc\u7231\u60c5\u8bed\u4e49\u5b66\u4e0e\u793e\u4ea4\u5a92\u4f53\u5185\u5bb9\u5bc6\u5207\u76f8\u8054\u3001\u4e0e\u793e\u4f1a\u5b66\u89c2\u70b9\u76f8\u4ea4\uff1b\u793e\u4ea4\u5a92\u4f53\u4e2d\u7684\u7231\u60c5\u8868\u73b0\u4e0e\u5362\u66fc\u7406\u8bba\u5b58\u5728\u91cd\u53e0\uff1b\u5362\u66fc\u7406\u8bba\u548c\u793e\u4f1a\u5b66\u7814\u7a76\u7684\u9760\u8fd1\u5ea6\uff1b\u5362\u66fc\u7406\u8bba\u5982\u4f55\u63a5\u8fd1\u793e\u4ea4\u5a92\u4f53\u4e2d\u7684\u7231\u60c5\u8868\u73b0\u3002\n3. **\u5176\u4ed6\u76f8\u5173**\uff1a\u7814\u7a76\u4e0e\u793e\u4f1a\u5b66\u7814\u7a76\u4e2d\u7684\u60c5\u611f\u56e0\u7d20\u5bc6\u5207\u76f8\u5173\uff1b\u8ba8\u8bba\u4e0e\u5a92\u4f53\u4e2d\u7684\u8bed\u4e49\u4fe1\u606f\u6709\u5173\u3002\n\n### \u7b2c\u4e8c\u6b65\uff1a\u603b\u7ed3\u7a81\u51fa\u7279\u70b9\n1. **\u7814\u7a76\u5efa\u8bae\u591a\u5143**\uff1a\u6db5\u76d6\u793e\u4ea4\u5a92\u4f53\u7231\u60c5\u8868\u73b0\u3001\u5f71\u89c6\u5e94\u7528\u4ee5\u53ca\u7406\u8bba\u5728\u793e\u4f1a\u5b66\u7814\u7a76\u4e2d\u7684\u5e94\u7528\u7b49\u591a\u4e2a\u65b9\u5411\u3002\n2. **\u5f3a\u8c03\u5173\u8054**\uff1a\u7a81\u51fa\u5362\u66fc\u7231\u60c5\u8bed\u4e49\u5b66\u4e0e\u793e\u4ea4\u5a92\u4f53\u5185\u5bb9\u3001\u793e\u4f1a\u5b66\u89c2\u70b9\u4e4b\u95f4\u7684\u7d27\u5bc6\u8054\u7cfb\u548c\u91cd\u53e0\u5173\u7cfb\u3002\n3. **\u6ce8\u91cd\u4ea4\u53c9\u7814\u7a76**\uff1a\u5173\u6ce8\u5362\u66fc\u7406\u8bba\u4e0e\u793e\u4f1a\u5b66\u7684\u4ea4\u53c9\u70b9\u4ee5\u53ca\u9760\u8fd1\u7a0b\u5ea6\u3002\n4. **\u6d89\u53ca\u60c5\u611f\u4e0e\u8bed\u4e49**\uff1a\u7814\u7a76\u4e0e\u793e\u4f1a\u5b66\u60c5\u611f\u56e0\u7d20\u3001\u5a92\u4f53\u8bed\u4e49\u4fe1\u606f\u76f8\u5173\u3002 ", "scene_monologue_context": "\u4eca\u5929\u6211\u4e3b\u8981\u5728\u7814\u7a76\u8fd1\u51e0\u5e74\u9886\u57df\u5185\u7684\u6280\u672f\u6846\u67b6\u4e0e\u65b9\u6cd5\u8bba\uff0c\u7279\u522b\u662f\u56f4\u7ed5\u5c06MCTS\u4e0ePRM\u76f8\u7ed3\u5408\u63a2\u7d22\u504f\u597d\u7b56\u7565\u6a21\u578b\u5fae\u8c03\u7684\u6709\u6548\u6280\u672f\u6846\u67b6\u5c55\u5f00\u3002  \n\n\u4e3a\u4e86\u4f18\u5316\u8fd9\u4e2a\u6280\u672f\u6846\u67b6\uff0c\u6211\u6df1\u5165\u7814\u7a76\u4e86\u901a\u8fc7\u5b9e\u9a8c\u5bf9\u6bd4\u4e0d\u540c\u53c2\u6570\u8bbe\u7f6e\u548c\u6539\u8fdb\u7b56\u7565\u7684\u65b9\u6cd5\u3002\u5728\u5b9e\u9a8c\u4e2d\uff0c\u4e3a\u68c0\u9a8cMCTS-VS\u7684\u6027\u80fd\uff0c\u5728\u4e0d\u540c\u4efb\u52a1\u4e0a\u5f00\u5c55\u4e86\u5b9e\u9a8c\uff0c\u50cf\u5408\u6210\u51fd\u6570\u3001NAS-bench\u95ee\u9898\u4ee5\u53caMuJoCo\u8fd0\u52a8\u4efb\u52a1\u7b49\uff0c\u8fd8\u5c06MCTS-VS\u4e0e\u5176\u4ed6\u9ed1\u76d2\u4f18\u5316\u65b9\u6cd5\u8fdb\u884c\u6bd4\u8f83\u3002\u5b9e\u9a8c\u65f6\uff0c\u9664\u4e86\u7528\u4e8e\u8ba1\u7b97UCB\u7684$C_{p}$\u53c2\u6570\u5916\uff0cMCTS-VS\u7684\u5176\u4ed6\u8d85\u53c2\u6570\u4fdd\u6301\u4e00\u81f4\uff1b\u5bf9\u4e8e\u57fa\u4e8eDropout\u548c\u5d4c\u5165\u7684\u65b9\u6cd5\uff0c\u9488\u5bf9\u5408\u6210\u51fd\u6570\u5c06\u53c2\u6570$d$\u8bbe\u4e3a\u6709\u6548\u7ef4\u5ea6\u6570\u91cf\uff0c\u5bf9\u4e8e\u5b9e\u9645\u95ee\u9898\u5219\u8bbe\u4e3a\u5408\u7406\u503c\uff0c\u4e0d\u540c\u65b9\u6cd5\u4e2d\u76f8\u540c\u7ec4\u4ef6\u7684\u8d85\u53c2\u6570\u4e5f\u8bbe\u4e3a\u4e00\u6837\uff0c\u5e76\u4e14\u5bf9\u6240\u6709\u95ee\u9898\u548c\u65b9\u6cd5\u4f7f\u7528\u4e94\u4e2a\u76f8\u540c\u7684\u968f\u673a\u79cd\u5b50\uff082021 - 2025\uff09\u3002  \n\n\u540c\u65f6\uff0c\u6211\u8fd8\u5bf9MCTS-VS\u7684\u8d85\u53c2\u6570\u8fdb\u884c\u4e86\u654f\u611f\u6027\u5206\u6790\u3002\u7814\u7a76\u4e86\u591a\u4e2a\u8d85\u53c2\u6570\u5bf9\u5176\u6027\u80fd\u7684\u5f71\u54cd\uff0c\u6bd4\u5982\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u7528\u4e8e\u4f18\u5316\u9009\u5b9a\u53d8\u91cf\u7684\u4f18\u5316\u7b97\u6cd5\uff0c\u6211\u5bf9\u6bd4\u4e86\u968f\u673a\u641c\u7d22\uff08RS\uff09\u3001BO\u548cTuRBO\u4e09\u79cd\u7b97\u6cd5\uff0c\u53d1\u73b0\u968f\u7740\u6709\u6548\u53d8\u91cf\u6bd4\u4f8b\u589e\u52a0\uff0cMCTS-VS-TuRBO\u9010\u6e10\u8d85\u8d8aMCTS-VS-RS\u548cMCTS-VS-BO \uff1b\u201cfillin\u201d\u7b56\u7565\u65b9\u9762\uff0c\u5bf9\u6bd4\u4e86\u6700\u4f73$k$\u7b56\u7565\uff08$k = 20$\uff09\u3001\u5e73\u5747\u6700\u4f73$k$\u7b56\u7565\u548c\u968f\u673a\u7b56\u7565\uff0c\u53d1\u73b0\u968f\u673a\u7b56\u7565\u4f1a\u5bfc\u81f4MCTS-VS-BO\u6027\u80fd\u4e0d\u4f73\uff0c\u800c\u6700\u4f73$k$\u7b56\u7565\u8868\u73b0\u66f4\u597d\uff1b\u6700\u4f73$k$\u7b56\u7565\u4e2d\u7684\u8d85\u53c2\u6570$k$\uff0c\u8f83\u5c0f\u7684$k$\u503c\u5728\u65e9\u671f\u9f13\u52b1\u5229\u7528\uff0c\u6027\u80fd\u8f83\u597d\u4f46\u6613\u8fc7\u65e9\u6536\u655b\uff0c\u8f83\u5927\u7684$k$\u503c\u9f13\u52b1\u63a2\u7d22\uff0c\u65e9\u671f\u6027\u80fd\u5dee\u4f46\u53ef\u80fd\u6536\u655b\u5230\u66f4\u597d\u503c\uff1b\u8ba1\u7b97UCB\u7684\u8d85\u53c2\u6570$C_{p}$\uff0c\u8fc7\u5c0f\u4f1a\u5bfc\u81f4\u6027\u80fd\u76f8\u5bf9\u8f83\u5dee\uff0c\u8fc7\u5927\u53ef\u80fd\u5bfc\u81f4\u8fc7\u5ea6\u63a2\u7d22\uff0c\u4e0d\u8fc7\u603b\u4f53MCTSVS\u5bf9$C_{p}$\u4e0d\u662f\u5f88\u654f\u611f\uff1b\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u91c7\u6837\u6570\u636e\u7684\u6570\u91cf$2\\\\,\\\\times\\\\,N_{v}\\\\,\\\\times\\\\,N_{s}$\uff0c\u5728\u8bc4\u4f30\u6b21\u6570\u76f8\u540c\u65f6\uff0c$N_{v}=2$\u4e14$N_{s}=3$\u65f6MCTS-VS-BO\u6027\u80fd\u6700\u4f73\uff1b\u91cd\u65b0\u521d\u59cb\u5316\u6811\u7684\u9608\u503c$N_{b a d}$ \uff0c$N_{b a d}=5$\u65f6MCTS-VS\u6027\u80fd\u6700\u4f73\uff1b\u8282\u70b9\u5206\u88c2\u9608\u503c$N_{s p l i t}$ \uff0c\u5176\u5bf9MCTS-VS-BO\u6027\u80fd\u5f71\u54cd\u5c0f\uff0c\u8bbe\u4e3a$N_{s p l i t}=3$\u53ef\u51cf\u5c11\u8fd0\u884c\u65f6\u95f4\u3002  \n\n\u53e6\u5916\uff0c\u5728\u7b56\u7565\u5408\u6210\u7684MCTS\u6846\u67b6\u65b9\u9762\uff0c\u6211\u5c06MCTS\u5e94\u7528\u4e8e\u6700\u4f18\u7b56\u7565\u641c\u7d22\u95ee\u9898\uff0c\u9009\u62e9UCT\u4f5c\u4e3a\u9009\u62e9\u9636\u6bb5\u7684\u6811\u7b56\u7565\uff0c\u5728\u5c55\u5f00\u9636\u6bb5\u968f\u673a\u5c55\u5f00\uff0c\u5907\u4efd\u9636\u6bb5\u5e94\u7528\u6700\u5927\u5907\u4efd\u89c4\u5219\u3002\u4e3a\u89e3\u51b3\u7b56\u7565\u8bc4\u4f30\u65f6\u95f4\u957f\u3001\u641c\u7d22\u7a7a\u95f4\u63a2\u7d22\u6709\u9650\u7684\u95ee\u9898\uff0c\u6dfb\u52a0\u4e86\u57fa\u4e8e\u9886\u57df\u77e5\u8bc6\u9650\u5236\u6709\u6548\u52a8\u4f5c\u7684\u89c4\u5219\uff0c\u8fd8\u5f15\u5165\u4e86\u5206\u5c42\u641c\u7d22\u548c\u5206\u9636\u6bb5\u641c\u7d22\u4e24\u79cd\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002\u5176\u4e2d\u5206\u5c42\u641c\u7d22\u65b9\u6cd5\u5c06\u6bcf\u4e2a\u7b56\u7565\u53c2\u6570\u7684\u8c03\u6574\u89c6\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u591a\u81c2\u8001\u864e\u673a\uff08MAB\uff09\u95ee\u9898\uff0c\u6839\u636eUCB1\u9009\u62e9\u52a8\u4f5c\uff0c\u4e3a\u6bcf\u4e2a\u8981\u8c03\u6574\u7684\u53c2\u6570\u6784\u5efa\u5355\u72ec\u7684MAB\uff0c\u65e2\u4fdd\u6301\u5bf9\u66f4\u6709\u5f71\u54cd\u529b\u4efb\u52a1\u7684\u5173\u6ce8\uff0c\u53c8\u80fd\u6709\u6548\u4f18\u5316\u53c2\u6570\u3002  ", "user_id": "\u6b64\u6765\u8bbf\u8005", "scene_content": "\u89d2\u8272    \u5185\u5bb9    \u5206\u955c\n", "story_board_summary_context": "49abb75e-21b0-4504-8500-80c6e0bd9a07:\u300c\u5206\u6790\u8fd1\u51e0\u5e74\u7814\u7a76\u9886\u57df\u7684\u6280\u672f\u6846\u67b6\u4e0e\u65b9\u6cd5\u8bba\u300d\n49abb75e-21b0-4504-8500-80c6e0bd9a07:\u300c\u8fd1\u51e0\u5e74\u5728\u5c06 MCTS \u4e0e PRM \u76f8\u7ed3\u5408\u63a2\u7d22\u504f\u597d\u7b56\u7565\u6a21\u578b\u5fae\u8c03\u7684\u6709\u6548\u6280\u672f\u6846\u67b6\u65f6\uff0c\u5177\u4f53\u662f\u5982\u4f55\u901a\u8fc7\u5b9e\u9a8c\u5bf9\u6bd4\u4e0d\u540c\u53c2\u6570\u8bbe\u7f6e\u548c\u6539\u8fdb\u7b56\u7565\u6765\u4f18\u5316\u6280\u672f\u6846\u67b6\u7684\uff1f \u300d\n49abb75e-21b0-4504-8500-80c6e0bd9a07:\u300cref_ids: 454984236281633338, chunk_ids: 4, Score: 0.3711, Text: # 5 Experiment\nTo examine the performance of MCTS-VS, we conduct experiments on different tasks, including synthetic functions, NAS-bench problems and MuJoCo locomotion tasks, to compare MCTS-VS with other black-box optimization methods. For MCTS-VS, we use the same hyper-parameters except $C_{p}$ , which is used for calculating UCB in Eq. (1). For Dropout and embedding-based methods, we set the parameter $d$ to the number of valid dimensions for synthetic functions, and a reasonable value for real-world problems. The hyper-parameters of the same components of different methods are set to the same. We use five identical random seeds (2021\u20132025) for all problems and methods. More details about the settings can be found in Appendix C. Our code is available at https://github.com/lamda-bbo/MCTS-VS .\u300d\n49abb75e-21b0-4504-8500-80c6e0bd9a07:\u300cref_ids: 454984236293691964, chunk_ids: 5, Score: 0.2676, Text: # DSensitivity Analysis of Hyper-parameters of MCTS-VS\nWe provide further studies to examine the influence of the hyper-parameters of MCTS-VS, including the employed optimization algorithm for optimizing the selected variables in each iteration, the \u201cfillin\u201d strategy, the hyper-parameter $k$ used in the best$k$ strategy, the hyper-parameter $C_{p}$ for calculating UCB in Eq. (1), the number $2\\\\,\\\\times\\\\,N_{v}\\\\,\\\\times\\\\,N_{s}$ sampled data in each iteration, the threshold $N_{b a d}$ for re-initializing a tree, and the threshold $N_{s p l i t}$ for splitting a tree node.  \n\nThe optimization algorithm is employed by MCTS-VS to optimize the selected variables in each iteration. We compare three different optimization algorithms, i.e., random search (RS), BO and TuRBO. First, we conduct experiments similar to \u201cEffectiveness of Variable Selection\u201d in Section 5.1, to show the effectiveness of MCTS-VS even when equipped with RS. Figure 6 shows that MCTSVS-RS is better than Dropout-RS and RS, revealing the advantage of MCTS-VS.  \n\n  \nFigure 6: Effectiveness of MCTS-VS when equipped with RS.  \n\nNext we compare the performance of MCTS-VS equipped with RS, BO and TuRBO, by experiments on the Hartmann functions with increasing ratio of valid variables. Hartmann 6 _500 has 6 valid variables. Hartmann 6 _5 _500 is generated by mixing 5 Hartmann 6 functions as Hartmann 6 $(\\\\pmb{x}_{1:6})+$ Hartmann 6 $\\\\backslash(\\\\pmb{x}_{7:12})+\\\\cdot\\\\cdot\\\\cdot+\\\\mathrm{Hartmann6}(\\\\pmb{x}_{25:30})$ , and appending 470 unrelated dimensions, where $\\\\pmb{x}_{i:j}$ denotes the $i$ -th to j-th variables. Hartmann 6 _10 _500 is generated alike. Thus, Hartmann 6 _5 _500 and Hartmann 6 _10 _500 have 30 and 60 valid variables, respectively. The results in Figure 7 show that as the ratio of valid variables increases, MCTS-VS-TuRBO gradually surpasses MCTS-VS-RS and MCTS-VS-BO, while MCTS-VS-RS becomes worse and worse. This is expected. If the ratio of valid variables is high, MCTS-VS is more likely to select the valid variables, so it is worth to use the expensive optimization algorithm, e.g., TuRBO, to optimize the selected variables. If the ratio is low, unrelated variables are more likely to be selected most of the time, so using a cheap optimization algorithm would be better. These observations also give us some guidance on selecting optimization algorithms in practice.  \n\n\u201cFill-in\u201d strategy is a basic component of variable selection methods, which influences the quality of the value of unselected variables. We compare the employed best$k$ strategy $(k=20)$ ) with the average best$k$ strategy and the random strategy. The average best$k$ strategy uses the average of the best $k$ data points for the unselected variables, and the random strategy samples the value of an unselected variable from its domain randomly. As shown in Figure 8(a), the random strategy leads to the poor performance of MCTS-VS-BO, which may be because it does not utilize the historical information and leads to over-exploration. The best${\\\\cdot k}$ strategy utilizes the historical points that have high objective values to fill in the unselected variables, thus behaving much better. The performance of the average strategy is between the best$k$ and random strategies. We recommend using the best$k$ strategy in practice.  \n\nThe hyper-parameter $k$ used in the best$k$ strategy controls the degree of exploitation for the unselected variables. As shown in Figure 8(b), a smaller $k$ encourages exploitation, which results in better performance in the early stage, but easily leads to premature convergence. A larger $k$ encourages exploration and behaves worse in the early stage, but may converge to a better value. We recommend using a larger $k$ if allowing enough evaluations.  \n\n  \nFigure 7: Sensitivity analysis of the optimization algorithm.  \n\n  \nFigure 8: Sensitivity analysis of the \u201cfill-in\u201d strategy and the hyper-parameter $k$ of the best$k$ strategy, using MCTS-VS-BO on Hartmann 6 _300 .  \n\nThe hyper-parameter $C_{p}$ for calculating UCB in Eq. (1) balances the exploration and exploitation of MCTS. As shown in Figure 9, a too small $C_{p}$ leads to relatively worse performance, highlighting the importance of exploration. A too large $C_{p}$ may also lead to over-exploration. But overall MCTSVS is not very sensitive to $C_{p}$ . We recommend setting $C_{p}$ between $1\\\\%$ and $10\\\\%$ of the optimum (i.e., max $f({\\\\boldsymbol{x}}))$ ), which is consistent with that for LA-MCTS [40].  \n\n  \nFigure 9: Sensitivity analysis of the hyper-parameter $C_{p}$ for calculating UCB in Eq. (1), using MCTS-VS-BO on Levy and Hartmann.  \n\nThe number $2\\\\,\\\\times\\\\,N_{v}\\\\,\\\\times\\\\,N_{s}$ of sampled data in ch iteration depends on the batch size $N_{v}$ of variable index subset and the sample batch size $N_{s}$ , and will influence the accuracy of estimating the variable score vector in Eq. (2). If we increase $N_{v}$ and $N_{s}$ , we can calculate the variable score more accurately, but also need more evaluations. Figure 10(a) shows that given the same number of evaluations, MCTS-VS-BO achieves the best performance when $N_{v}=2$ and $N_{s}=3$ . Thus, this setting may be a good choice to balance the accuracy of variable score and the number of evaluations, which is also used throughout the experiments.  \n\nThe threshold $N_{b a d}$ for re-initializing a tree controls the tolerance of selecting bad tree nodes (i.e., nodes containing unimportant variables). A smaller $N_{b a d}$ leads to frequent re-initialization, which can adjust quickly but may cause under-exploitation of the tree. A larger $N_{b a d}$ can make full use of the tree, but may optimize too much on unimportant variables. Figure 10(b) shows that MCTS-VS achieves the best performance when $N_{b a d}=5$ . Thus, we recommend to use this setting, to balance the re-initialization and exploitation of the tree.  \n\nThe threshold $N_{s p l i t}$ for splitting a node. If the number of variables in a node is larger than $N_{s p l i t}$ ,the node can be further partitioned. That is, the parameter $N_{s p l i t}$ controls the least number of variables in a leaf node and thus affects the number of selected variables, which has a direct influence on the wall clock time. Note that MCTS-VS selects a leaf node and optimizes the variables contained by this node in each iteration. The smaller $N_{s p l i t}$ , the shorter the time. Figure 10(c) shows that $N_{s p l i t}$ has little influence on the performance of MCTS-VS-BO, and thus we recommend to set $N_{s p l i t}=3$ to reduce the wall clock time.  \n\n  \nFigure 10: S vity analysis of the number $2\\\\,\\\\times\\\\,N_{v}\\\\,\\\\times\\\\,N_{s}$ pled data in each iteration, the threshold $N_{b a d}$ for re-initializing a tree and the threshold $N_{s p l i t}$ for splitting a node, using MCTS-VS-BO on Hartmann 6 _300 .  \n\nInfluence of the hyper-parameters on the runtime of MCTS-VS. We also provide some intuitive explanation about the influence of the hyper-parameters on the runtime. The threshold $N_{s p l i t}$ for splitting a node has a direct impact on the runtime, because it controls the least number of variables to be optimized in a leaf node. That is, the runtime will increase with $N_{s p l i t}$ . Other parameters may affect the depth of the tree and thus the runtime. For the threshold $N_{b a d}$ for re-initializing a tree, if it is set to a small value, MCTS-VS will re-build the tree frequently and the depth of the tree is small. The shallow nodes have more variables, leading to more runtime to optimize. For the hyper-parameter $C_{p}$ for calculating UCB, if it is set to a large value, the exploration is preferred and MCTS-VS will tend to select the right node (regarded as containing unimportant variables). The tree thus will be re-built freq tly, ding to more runtime. For the number $2\\\\,\\\\times\\\\,N_{v}\\\\,\\\\times\\\\,N_{s}$ of sampled data at each iteration, if $N_{v}$ and $N_{s}$ are set to large values, the depth of the tree will be small given the total number of evaluations, and thus lead to more runtime.\u300d\n49abb75e-21b0-4504-8500-80c6e0bd9a07:\u300cref_ids: 454845604178965768, chunk_ids: 4, Score: 0.2383, Text: # 4.2 The MCTS Framework for Strategy Synthesis\nWe instantiate MCTS for this optimal strategy search problem. We use UCT as the tree policy in the selection phase and rollout randomly in the rollout phase. Notably, in the backup phase, we apply the max-backup rule [Sabharwal et al. , 2012; Sun et al. , 2023]. This approach updates the action values with the best return observed, rather than the average. It encourages more aggressive exploitation towards the bestperforming strategy observed, aligning with our goal. Therefore, in each MCTS simulation, the agent explores and assesses a single strategy, continually updating and retaining the best strategy seen so far. The process continues until a predetermined number of simulations have been run. At the conclusion of this process, the strategy that has achieved the highest reward $R_{T}$ is selected and presented as the synthesized SMT strategy for the specified instance set $P$ .  \n\nFigure 2 illustrates our basic MCTS framework, using a simplified CFG $G^{\\\\prime}$ for illustrative purposes. $G^{\\\\prime}$ is defined as $\\\\mathrm{~S~}\\\\dot{\\\\rightarrow}\\\\mathrm{~\\\\tiny~T~S~}|$ symbolize variables for strategy and tactic, respectively. smt and $\\\\mathrm{~S~}\\\\rightarrow$ Tsimplify |aig , where S and T  \n\nThe primary challenge in synthesizing strategies through MCTS is the extensive time required to evaluate each strategy, which involves calling an SMT solver on all instances in $P$ . This situation leads to a very limited exploration of potential paths, particularly given the immense search space created by the rich strategy language. To address this issue, we first add additional rules restricting valid actions based on domain knowledge. For example, no tactic could be applied sequentially following a solver tactic such as smt . We refer readers to the Appendix for a comprehensive list of such rules. More importantly, we have introduced two heuristic methods, namely layered search and the staged search methods, into conventional MCTS, facilitating a deeper and more effective exploration of the strategy space.\n\n# 4.3 Layered Search\nTo solve the above-mentioned challenge, we propose a layered search method to optimize the tactic parameters within strategy synthesis. As shown in our CFG $G$ , each tactic can be paired with multiple parameters. In traditional MCTS, the selection of each candidate value for a parameter is represented by one production rule in $G$ , and the agent needs to make sequential production-rule decisions to configure all parameters for a given tactic, leading to exponential growth in the problem search tree.  \n\n  \nFigure 3: Comparison of the conventional MCTS and the layersearch in treating tactic parameter tuning  \n\nTo address this issue, our layered search method approaches the tuning of each tactic parameter as a separate Multi-Armed Bandit (MAB) problem [Bubeck et al. , 2012]. In an MAB scenario, an agent repeatedly chooses from multiple actions (arms) with unknown rewards. The major difference between MAB and MDP is that, in MAB, an action does not affect subsequent state transitions. For these MABs, we select actions according to UCB1 [Auer et al. , 2002].  \n\nIn the layered search, we build an individual MAB for each parameter to be tuned, with each arm representing one candidate value. The MABs are associated with a tree edge (tactic) but themselves are not part of the tree. They are engaged to select parameter values when their associated tree edge is traversed, and they are updated based on the episode reward during the Backup phase. However, such MABs do not expand the MCTS search tree after the parameter configuration, since they are separate components from the main search tree. This is in contrast to conventional MCTS, which also employs MAB principles to select among child nodes to explore, where these nodes are part of the search tree.  \n\nThis concept is well explained in Figure 3 with an example based on the simplified grammar $G^{\\\\prime}$ . Here, the tactic simplify has two Boolean parameters, namely som and flat to be tuned. As shown in Figure 3(a), the search tree is expanded fourfold to accommodate all possible combinations of these two parameters in the conventional MCTS framework. In contrast, in the layered search framework, MABs for the two parameters are isolated from the search tree, creating no additional branches in the tree.  \n\nThe rationale behind the layer search is twofold. Firstly, tactics such as simplify may have dozens of parameters, and it is common for a tactic to be used multiple times within a strategy. Thus, navigating a search space that is fully expanded by all possible parameter combinations becomes impractical, especially given the time-intensive nature of strategy evaluation. Secondly, we argue that parameter tuning, although important, serves more as an auxiliary task in comparison to the tasks of tactic selection and sequencing. By employing the layered search method, we maintain the primary focus on more influential tasks. At the same time, the isolated MABs efficiently optimize the parameters, thus effectively managing these secondary tasks without overwhelming the main search process.\u300d\n", "dreams_guidance_context": "### Step 1: \u786e\u5b9a\u7814\u7a76\u7684\u5173\u952e\u95ee\u9898\u548c\u76ee\u6807\n - **\u5173\u952e\u95ee\u9898**\uff1a\n    - \u5982\u4f55\u5c06MCTS\u4e0ePRM\u76f8\u7ed3\u5408\u63a2\u7d22\u504f\u597d\u7b56\u7565\u6a21\u578b\u5fae\u8c03\u7684\u6709\u6548\u6280\u672f\u6846\u67b6\uff1f\n    - MCTS-VS\u5728\u4e0d\u540c\u4efb\u52a1\u4e2d\u7684\u6027\u80fd\u8868\u73b0\u5982\u4f55\uff0c\u4e0e\u5176\u4ed6\u9ed1\u76d2\u4f18\u5316\u65b9\u6cd5\u76f8\u6bd4\u6709\u4f55\u4f18\u52a3\uff1f\n    - MCTS-VS\u7684\u5404\u4e2a\u8d85\u53c2\u6570\u5bf9\u5176\u6027\u80fd\u6709\u600e\u6837\u7684\u5f71\u54cd\uff0c\u5982\u4f55\u8bbe\u7f6e\u8d85\u53c2\u6570\u80fd\u8fbe\u5230\u8f83\u597d\u6548\u679c\uff1f\n    - \u5728\u7b56\u7565\u5408\u6210\u4e2d\u5e94\u7528MCTS\u9762\u4e34\u54ea\u4e9b\u6311\u6218\uff0c\u5982\u4f55\u89e3\u51b3\u8fd9\u4e9b\u6311\u6218\u4ee5\u66f4\u6709\u6548\u5730\u63a2\u7d22\u7b56\u7565\u7a7a\u95f4\uff1f\n - **\u76ee\u6807**\uff1a\n    - \u627e\u5230\u5c06MCTS\u4e0ePRM\u7ed3\u5408\u63a2\u7d22\u504f\u597d\u7b56\u7565\u6a21\u578b\u5fae\u8c03\u7684\u6709\u6548\u6280\u672f\u6846\u67b6\u3002\n    - \u901a\u8fc7\u5b9e\u9a8c\u5bf9\u6bd4\u4e0d\u540c\u53c2\u6570\u8bbe\u7f6e\u548c\u6539\u8fdb\u7b56\u7565\u6765\u4f18\u5316\u8be5\u6280\u672f\u6846\u67b6\u3002\n    - \u89e3\u51b3\u7b56\u7565\u5408\u6210\u4e2dMCTS\u5e94\u7528\u65f6\u7b56\u7565\u8bc4\u4f30\u65f6\u95f4\u957f\u3001\u641c\u7d22\u7a7a\u95f4\u63a2\u7d22\u6709\u9650\u7684\u95ee\u9898\uff0c\u63d0\u9ad8\u7b56\u7565\u5408\u6210\u6548\u7387\u3002\n\n### Step 2: \u68b3\u7406\u7b97\u6cd5\u548c\u65b9\u6cd5\n - **MCTS-VS\u76f8\u5173**\uff1a\n    - \u5728\u4e0d\u540c\u4efb\u52a1\uff08\u5408\u6210\u51fd\u6570\u3001NAS-bench\u95ee\u9898\u3001MuJoCo\u8fd0\u52a8\u4efb\u52a1\uff09\u5b9e\u9a8c\u4e2d\uff0c\u9664\u8ba1\u7b97UCB\u7684$C_{p}$\u53c2\u6570\u5916\uff0c\u5176\u4ed6\u8d85\u53c2\u6570\u4fdd\u6301\u4e00\u81f4\uff0c\u4e0e\u5176\u4ed6\u9ed1\u76d2\u4f18\u5316\u65b9\u6cd5\u5bf9\u6bd4\u6027\u80fd\u3002\n    - \u5bf9MCTS-VS\u7684\u591a\u4e2a\u8d85\u53c2\u6570\u8fdb\u884c\u654f\u611f\u6027\u5206\u6790\uff0c\u5305\u62ec\u4f18\u5316\u7b97\u6cd5\uff08\u968f\u673a\u641c\u7d22RS\u3001BO\u3001TuRBO\uff09\u3001\u201cfillin\u201d\u7b56\u7565\uff08\u6700\u4f73$k$\u7b56\u7565\u3001\u5e73\u5747\u6700\u4f73$k$\u7b56\u7565\u3001\u968f\u673a\u7b56\u7565\uff09\u3001\u6700\u4f73$k$\u7b56\u7565\u4e2d\u7684$k$\u503c\u3001\u8ba1\u7b97UCB\u7684$C_{p}$\u3001\u91c7\u6837\u6570\u636e\u6570\u91cf$2\\times N_{v}\\times N_{s}$\u3001\u91cd\u65b0\u521d\u59cb\u5316\u6811\u7684\u9608\u503c$N_{bad}$\u3001\u8282\u70b9\u5206\u88c2\u9608\u503c$N_{split}$\u3002\n - **\u7b56\u7565\u5408\u6210\u7684MCTS\u6846\u67b6**\uff1a\n    - \u9009\u62e9UCT\u4f5c\u4e3a\u9009\u62e9\u9636\u6bb5\u7684\u6811\u7b56\u7565\uff0c\u5728\u5c55\u5f00\u9636\u6bb5\u968f\u673a\u5c55\u5f00\uff0c\u5907\u4efd\u9636\u6bb5\u5e94\u7528\u6700\u5927\u5907\u4efd\u89c4\u5219\u3002\n    - \u6dfb\u52a0\u57fa\u4e8e\u9886\u57df\u77e5\u8bc6\u9650\u5236\u6709\u6548\u52a8\u4f5c\u7684\u89c4\u5219\u3002\n    - \u5f15\u5165\u5206\u5c42\u641c\u7d22\u548c\u5206\u9636\u6bb5\u641c\u7d22\u4e24\u79cd\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u5176\u4e2d\u5206\u5c42\u641c\u7d22\u5c06\u6bcf\u4e2a\u7b56\u7565\u53c2\u6570\u7684\u8c03\u6574\u89c6\u4e3a\u72ec\u7acb\u7684\u591a\u81c2\u8001\u864e\u673a\uff08MAB\uff09\u95ee\u9898\uff0c\u6839\u636eUCB1\u9009\u62e9\u52a8\u4f5c\uff0c\u4e3a\u6bcf\u4e2a\u8981\u8c03\u6574\u7684\u53c2\u6570\u6784\u5efa\u5355\u72ec\u7684MAB\u3002\n\n### Step 3: \u5206\u6790\u5b9e\u9a8c\u8bbe\u8ba1\u548c\u7ed3\u679c\n - **\u5b9e\u9a8c\u8bbe\u8ba1**\uff1a\n    - \u4e3a\u68c0\u9a8cMCTS-VS\u6027\u80fd\uff0c\u5728\u591a\u79cd\u4e0d\u540c\u4efb\u52a1\u4e0a\u5f00\u5c55\u5b9e\u9a8c\uff0c\u5e76\u4e0e\u5176\u4ed6\u9ed1\u76d2\u4f18\u5316\u65b9\u6cd5\u5bf9\u6bd4\u3002\u5bf9\u4e0d\u540c\u65b9\u6cd5\u7684\u8d85\u53c2\u6570\u8bbe\u7f6e\u6709\u660e\u786e\u89c4\u5b9a\uff0c\u4fdd\u6301\u90e8\u5206\u8d85\u53c2\u6570\u4e00\u81f4\uff0c\u4f7f\u7528\u76f8\u540c\u968f\u673a\u79cd\u5b50\u4ee5\u4fdd\u8bc1\u5b9e\u9a8c\u53ef\u91cd\u590d\u6027\u3002\n    - \u9488\u5bf9MCTS-VS\u8d85\u53c2\u6570\u654f\u611f\u6027\u5206\u6790\uff0c\u5206\u522b\u8bbe\u8ba1\u4e0d\u540c\u5b9e\u9a8c\u5bf9\u6bd4\u4e0d\u540c\u8d85\u53c2\u6570\u8bbe\u7f6e\u4e0b\u7684\u6027\u80fd\u3002\u5982\u5bf9\u6bd4\u4e0d\u540c\u4f18\u5316\u7b97\u6cd5\u65f6\uff0c\u5728\u4e0d\u540c\u6709\u6548\u53d8\u91cf\u6bd4\u4f8b\u7684Hartmann\u51fd\u6570\u4e0a\u5b9e\u9a8c\uff1b\u5bf9\u6bd4\u201cfillin\u201d\u7b56\u7565\u65f6\uff0c\u5728\u7279\u5b9a\u51fd\u6570\u4e0a\u5b9e\u9a8c\u7b49\u3002\n - **\u5b9e\u9a8c\u7ed3\u679c**\uff1a\n    - MCTS-VS\u5728\u4e0d\u540c\u4efb\u52a1\u5b9e\u9a8c\u4e2d\u5c55\u73b0\u51fa\u4e00\u5b9a\u6027\u80fd\u7279\u70b9\uff0c\u4e0e\u5176\u4ed6\u9ed1\u76d2\u4f18\u5316\u65b9\u6cd5\u6709\u4e0d\u540c\u7684\u6027\u80fd\u5bf9\u6bd4\u7ed3\u679c\u3002\n    - \u8d85\u53c2\u6570\u654f\u611f\u6027\u5206\u6790\u7ed3\u679c\uff1a\u968f\u7740\u6709\u6548\u53d8\u91cf\u6bd4\u4f8b\u589e\u52a0\uff0cMCTS-VS-TuRBO\u9010\u6e10\u8d85\u8d8aMCTS-VS-RS\u548cMCTS-VS-BO\uff1b\u968f\u673a\u7b56\u7565\u5bfc\u81f4MCTS-VS-BO\u6027\u80fd\u4e0d\u4f73\uff0c\u6700\u4f73$k$\u7b56\u7565\u8868\u73b0\u66f4\u597d\uff1b\u8f83\u5c0f\u7684$k$\u503c\u65e9\u671f\u6027\u80fd\u597d\u4f46\u6613\u8fc7\u65e9\u6536\u655b\uff0c\u8f83\u5927\u7684$k$\u503c\u65e9\u671f\u6027\u80fd\u5dee\u4f46\u53ef\u80fd\u6536\u655b\u5230\u66f4\u597d\u503c\uff1bMCTSVS\u5bf9$C_{p}$\u4e0d\u592a\u654f\u611f\uff0c$C_{p}$\u8fc7\u5c0f\u6027\u80fd\u76f8\u5bf9\u8f83\u5dee\uff0c\u8fc7\u5927\u53ef\u80fd\u8fc7\u5ea6\u63a2\u7d22\uff1b$N_{v}=2$\u4e14$N_{s}=3$\u65f6MCTS-VS-BO\u6027\u80fd\u6700\u4f73\uff1b$N_{bad}=5$\u65f6MCTS-VS\u6027\u80fd\u6700\u4f73\uff1b$N_{split}$\u5bf9MCTS-VS-BO\u6027\u80fd\u5f71\u54cd\u5c0f\uff0c\u8bbe\u4e3a$N_{split}=3$\u53ef\u51cf\u5c11\u8fd0\u884c\u65f6\u95f4\u3002\n\n### Step 4: \u8bc4\u4f30\u7814\u7a76\u7684\u5c40\u9650\u6027\u548c\u672a\u6765\u65b9\u5411\n - **\u5c40\u9650\u6027**\uff1a\u6587\u6863\u4e2d\u672a\u660e\u786e\u63d0\u53ca\u7814\u7a76\u7684\u5c40\u9650\u6027\u3002\n - **\u672a\u6765\u65b9\u5411**\uff1a\u6587\u6863\u4e2d\u672a\u660e\u786e\u63d0\u51fa\u672a\u6765\u7814\u7a76\u65b9\u5411\u3002\u4f46\u4ece\u7814\u7a76\u5185\u5bb9\u63a8\u6d4b\uff0c\u672a\u6765\u53ef\u80fd\u8fdb\u4e00\u6b65\u63a2\u7d22\u66f4\u4f18\u7684\u6280\u672f\u6846\u67b6\uff0c\u4f18\u5316\u8d85\u53c2\u6570\u8bbe\u7f6e\uff1b\u6df1\u5165\u7814\u7a76\u5206\u5c42\u641c\u7d22\u548c\u5206\u9636\u6bb5\u641c\u7d22\u65b9\u6cd5\u7684\u6539\u8fdb\u548c\u62d3\u5c55\uff1b\u63a2\u7d22MCTS\u4e0ePRM\u7ed3\u5408\u5728\u66f4\u591a\u9886\u57df\u548c\u4efb\u52a1\u4e2d\u7684\u5e94\u7528\u7b49\u3002  ", "evolutionary_step": "### 1. \u7814\u7a76\u65b9\u5411\u805a\u7126\n\u56f4\u7ed5\u8fd1\u51e0\u5e74\u5c06MCTS\u4e0ePRM\u76f8\u7ed3\u5408\u63a2\u7d22\u504f\u597d\u7b56\u7565\u6a21\u578b\u5fae\u8c03\u7684\u6280\u672f\u6846\u67b6\u5c55\u5f00\u7814\u7a76\uff0c\u5206\u6790\u5176\u6280\u672f\u6846\u67b6\u4e0e\u65b9\u6cd5\u8bba\u3002\n\n### 2. \u5b9e\u9a8c\u8bbe\u7f6e\u4e0e\u5bf9\u6bd4\n - \u901a\u8fc7\u5728\u4e0d\u540c\u4efb\u52a1\uff08\u5408\u6210\u51fd\u6570\u3001NAS - bench\u95ee\u9898\u548cMuJoCo\u8fd0\u52a8\u4efb\u52a1\uff09\u4e0a\u8fdb\u884c\u5b9e\u9a8c\uff0c\u5bf9\u6bd4MCTS - VS\u4e0e\u5176\u4ed6\u9ed1\u76d2\u4f18\u5316\u65b9\u6cd5\u7684\u6027\u80fd\u3002\u5b9e\u9a8c\u4e2d\u5bf9MCTS - VS\u9664\u8ba1\u7b97UCB\u7684\u53c2\u6570$C_{p}$\u5916\u4f7f\u7528\u76f8\u540c\u8d85\u53c2\u6570\uff0c\u5bf9Dropout\u548c\u57fa\u4e8e\u5d4c\u5165\u7684\u65b9\u6cd5\u6839\u636e\u4efb\u52a1\u8bbe\u7f6e\u53c2\u6570$d$\uff0c\u4e0d\u540c\u65b9\u6cd5\u76f8\u540c\u7ec4\u4ef6\u7684\u8d85\u53c2\u6570\u8bbe\u4e3a\u76f8\u540c\uff0c\u4f7f\u7528\u4e94\u4e2a\u76f8\u540c\u968f\u673a\u79cd\u5b50\uff082021 - 2025\uff09 \u3002\u4ee3\u7801\u53ef\u5728https://github.com/lamda - bbo/MCTS - VS\u83b7\u53d6\u3002\n\n### 3. MCTS - VS\u8d85\u53c2\u6570\u654f\u611f\u6027\u5206\u6790\n - **\u4f18\u5316\u7b97\u6cd5**\uff1a\u5bf9\u6bd4\u968f\u673a\u641c\u7d22\uff08RS\uff09\u3001BO\u548cTuRBO\u4e09\u79cd\u4f18\u5316\u7b97\u6cd5\u3002\u5b9e\u9a8c\u8868\u660e\u5373\u4f7f\u914d\u5907RS\uff0cMCTS - VS\u4e5f\u6709\u6548\uff1b\u968f\u7740\u6709\u6548\u53d8\u91cf\u6bd4\u4f8b\u589e\u52a0\uff0cMCTS - VS - TuRBO\u9010\u6e10\u8d85\u8d8aMCTS - VS - RS\u548cMCTS - VS - BO\uff0cMCTS - VS - RS\u6027\u80fd\u53d8\u5dee\uff0c\u6b64\u7ed3\u679c\u53ef\u4e3a\u5b9e\u9645\u9009\u62e9\u4f18\u5316\u7b97\u6cd5\u63d0\u4f9b\u6307\u5bfc\u3002\n - **\u201cfill - in\u201d\u7b56\u7565**\uff1a\u5bf9\u6bd4\u6700\u4f73$k$\u7b56\u7565\uff08$k = 20$\uff09\u3001\u5e73\u5747\u6700\u4f73$k$\u7b56\u7565\u548c\u968f\u673a\u7b56\u7565\u3002\u968f\u673a\u7b56\u7565\u5bfc\u81f4MCTS - VS - BO\u6027\u80fd\u5dee\uff0c\u6700\u4f73$k$\u7b56\u7565\u8868\u73b0\u66f4\u597d\uff0c\u5e73\u5747\u7b56\u7565\u6027\u80fd\u4ecb\u4e8e\u4e24\u8005\u4e4b\u95f4\uff0c\u63a8\u8350\u5728\u5b9e\u8df5\u4e2d\u4f7f\u7528\u6700\u4f73$k$\u7b56\u7565\u3002\n - **\u6700\u4f73$k$\u7b56\u7565\u4e2d\u7684\u8d85\u53c2\u6570$k$**\uff1a\u8f83\u5c0f\u7684$k$\u9f13\u52b1\u5229\u7528\uff0c\u65e9\u671f\u6027\u80fd\u597d\u4f46\u6613\u65e9\u719f\u6536\u655b\uff1b\u8f83\u5927\u7684$k$\u9f13\u52b1\u63a2\u7d22\uff0c\u65e9\u671f\u6027\u80fd\u5dee\u4f46\u53ef\u80fd\u6536\u655b\u5230\u66f4\u597d\u503c\uff0c\u82e5\u5141\u8bb8\u8db3\u591f\u8bc4\u4f30\u6b21\u6570\uff0c\u63a8\u8350\u4f7f\u7528\u8f83\u5927\u7684$k$\u3002\n - **\u8ba1\u7b97UCB\u7684\u8d85\u53c2\u6570$C_{p}$**\uff1a$C_{p}$\u8fc7\u5c0f\u6027\u80fd\u8f83\u5dee\uff0c\u8fc7\u5927\u53ef\u80fd\u5bfc\u81f4\u8fc7\u5ea6\u63a2\u7d22\uff0c\u4f46\u603b\u4f53MCTS - VS\u5bf9$C_{p}$\u4e0d\u592a\u654f\u611f\uff0c\u63a8\u8350\u5c06$C_{p}$\u8bbe\u4e3a\u6700\u4f18\u503c\uff08\u5373max $f({\\boldsymbol{x}})$\uff09\u7684$1\\%$\u5230$10\\%$\u4e4b\u95f4\u3002\n - **\u6bcf\u6b21\u8fed\u4ee3\u91c7\u6837\u6570\u636e\u6570\u91cf$2\\times N_{v}\\times N_{s}$**\uff1a\u53d6\u51b3\u4e8e\u53d8\u91cf\u7d22\u5f15\u5b50\u96c6\u6279\u91cf\u5927\u5c0f$N_{v}$\u548c\u6837\u672c\u6279\u91cf\u5927\u5c0f$N_{s}$\uff0c\u5f71\u54cd\u53d8\u91cf\u5f97\u5206\u5411\u91cf\u4f30\u8ba1\u51c6\u786e\u6027\u3002\u5728\u76f8\u540c\u8bc4\u4f30\u6b21\u6570\u4e0b\uff0c$N_{v}=2$\u4e14$N_{s}=3$\u65f6MCTS - VS - BO\u6027\u80fd\u6700\u4f73\uff0c\u6b64\u8bbe\u7f6e\u53ef\u5e73\u8861\u53d8\u91cf\u5f97\u5206\u51c6\u786e\u6027\u548c\u8bc4\u4f30\u6b21\u6570\u3002\n - **\u91cd\u65b0\u521d\u59cb\u5316\u6811\u7684\u9608\u503c$N_{bad}$**\uff1a\u8f83\u5c0f\u7684$N_{bad}$\u5bfc\u81f4\u9891\u7e41\u91cd\u65b0\u521d\u59cb\u5316\uff0c\u80fd\u5feb\u901f\u8c03\u6574\u4f46\u53ef\u80fd\u672a\u5145\u5206\u5229\u7528\u6811\uff1b\u8f83\u5927\u7684$N_{bad}$\u53ef\u5145\u5206\u5229\u7528\u6811\uff0c\u4f46\u53ef\u80fd\u5728\u4e0d\u91cd\u8981\u53d8\u91cf\u4e0a\u8fc7\u5ea6\u4f18\u5316\u3002$N_{bad}=5$\u65f6MCTS - VS\u6027\u80fd\u6700\u4f73\u3002\n - **\u8282\u70b9\u5206\u88c2\u9608\u503c$N_{split}$**\uff1a\u63a7\u5236\u53f6\u8282\u70b9\u4e2d\u6700\u5c11\u53d8\u91cf\u6570\uff0c\u5f71\u54cd\u6240\u9009\u53d8\u91cf\u6570\u91cf\u548c\u8fd0\u884c\u65f6\u95f4\u3002$N_{split}$\u5bf9MCTS - VS - BO\u6027\u80fd\u5f71\u54cd\u5c0f\uff0c\u63a8\u8350\u8bbe\u4e3a$3$\u4ee5\u51cf\u5c11\u8fd0\u884c\u65f6\u95f4\u3002\n\n### 4. MCTS\u7b56\u7565\u5408\u6210\u6846\u67b6\n - **\u57fa\u672c\u6846\u67b6**\uff1a\u5728\u6700\u4f18\u7b56\u7565\u641c\u7d22\u95ee\u9898\u4e2d\u5b9e\u4f8b\u5316MCTS\uff0c\u9009\u62e9\u9636\u6bb5\u4f7f\u7528UCT\u4f5c\u4e3a\u6811\u7b56\u7565\uff0c\u5c55\u5f00\u9636\u6bb5\u968f\u673a\u5c55\u5f00\uff0c\u5907\u4efd\u9636\u6bb5\u5e94\u7528\u6700\u5927\u5907\u4efd\u89c4\u5219\uff0c\u9f13\u52b1\u5bf9\u89c2\u5bdf\u5230\u7684\u6700\u4f73\u7b56\u7565\u8fdb\u884c\u66f4\u79ef\u6781\u7684\u5229\u7528\u3002\u6700\u7ec8\u9009\u62e9\u83b7\u5f97\u6700\u9ad8\u5956\u52b1$R_{T}$\u7684\u7b56\u7565\u4f5c\u4e3a\u5408\u6210\u7b56\u7565\u3002\n - **\u9762\u4e34\u6311\u6218\u4e0e\u89e3\u51b3\u65b9\u6cd5**\uff1a\u901a\u8fc7MCTS\u5408\u6210\u7b56\u7565\u7684\u4e3b\u8981\u6311\u6218\u662f\u8bc4\u4f30\u6bcf\u4e2a\u7b56\u7565\u8017\u65f6\uff0c\u4e3a\u6b64\u6dfb\u52a0\u57fa\u4e8e\u9886\u57df\u77e5\u8bc6\u7684\u9650\u5236\u6709\u6548\u52a8\u4f5c\u7684\u989d\u5916\u89c4\u5219\uff0c\u5e76\u5f15\u5165\u5206\u5c42\u641c\u7d22\u548c\u5206\u9636\u6bb5\u641c\u7d22\u4e24\u79cd\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u4fc3\u8fdb\u5bf9\u7b56\u7565\u7a7a\u95f4\u66f4\u6df1\u5165\u6709\u6548\u7684\u63a2\u7d22\u3002\n\n### 5. \u5206\u5c42\u641c\u7d22\u65b9\u6cd5\n - **\u539f\u7406**\uff1a\u5c06\u6bcf\u4e2a\u7b56\u7565\u53c2\u6570\u8c03\u6574\u89c6\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u591a\u81c2\u8001\u864e\u673a\uff08MAB\uff09\u95ee\u9898\uff0c\u6839\u636eUCB1\u9009\u62e9\u52a8\u4f5c\u3002\u4e3a\u6bcf\u4e2a\u8981\u8c03\u6574\u7684\u53c2\u6570\u6784\u5efa\u5355\u72ec\u7684MAB\uff0c\u5176\u4e0e\u6811\u8fb9\uff08\u7b56\u7565\uff09\u76f8\u5173\u8054\u4f46\u4e0d\u662f\u6811\u7684\u4e00\u90e8\u5206\uff0c\u5728\u904d\u5386\u76f8\u5173\u6811\u8fb9\u65f6\u9009\u62e9\u53c2\u6570\u503c\uff0c\u5e76\u5728\u5907\u4efd\u9636\u6bb5\u6839\u636e\u60c5\u8282\u5956\u52b1\u66f4\u65b0\u3002\n - **\u4f18\u52bf**\uff1a\u907f\u514d\u4f20\u7edfMCTS\u4e2d\u56e0\u6240\u6709\u53ef\u80fd\u53c2\u6570\u7ec4\u5408\u5bfc\u81f4\u641c\u7d22\u6811\u6307\u6570\u589e\u957f\u7684\u95ee\u9898\uff0c\u540c\u65f6\u4fdd\u6301\u5bf9\u7b56\u7565\u9009\u62e9\u548c\u6392\u5e8f\u7b49\u66f4\u6709\u5f71\u54cd\u529b\u4efb\u52a1\u7684\u5173\u6ce8\uff0c\u6709\u6548\u7ba1\u7406\u53c2\u6570\u8c03\u6574\u8fd9\u4e00\u8f85\u52a9\u4efb\u52a1\u800c\u4e0d\u5f71\u54cd\u4e3b\u8981\u641c\u7d22\u8fc7\u7a0b \u3002 ", "dreams_personality_context": "### \u7b2c\u4e00\u6b65\uff1a\u5206\u6790\u7814\u7a76\u65b9\u5411\u4f53\u73b0\u7684\u6027\u683c\n\u7814\u7a76\u805a\u7126\u4e8e\u8fd1\u51e0\u5e74\u5c06MCTS\u4e0ePRM\u76f8\u7ed3\u5408\u63a2\u7d22\u504f\u597d\u7b56\u7565\u6a21\u578b\u5fae\u8c03\u7684\u6280\u672f\u6846\u67b6\uff0c\u8fd9\u663e\u793a\u51fa\u7814\u7a76\u8005\u5177\u6709\u7d27\u8ddf\u524d\u6cbf\u3001\u52c7\u4e8e\u63a2\u7d22\u65b0\u9886\u57df\u7684\u6027\u683c\u7279\u70b9\uff0c\u5bf9\u65b0\u5174\u6280\u672f\u548c\u7814\u7a76\u65b9\u5411\u4fdd\u6301\u654f\u9510\u7684\u6d1e\u5bdf\u529b\uff0c\u4e0d\u6ee1\u8db3\u4e8e\u4f20\u7edf\u7814\u7a76\uff0c\u6562\u4e8e\u6d89\u8db3\u5c1a\u672a\u5145\u5206\u6316\u6398\u7684\u6280\u672f\u7ed3\u5408\u70b9\uff0c\u5c55\u73b0\u51fa\u521b\u65b0\u548c\u8fdb\u53d6\u7684\u4e00\u9762\u3002\n\n### \u7b2c\u4e8c\u6b65\uff1a\u5206\u6790\u5b9e\u9a8c\u8bbe\u7f6e\u4e0e\u5bf9\u6bd4\u4f53\u73b0\u7684\u6027\u683c\n\u5728\u4e0d\u540c\u4efb\u52a1\u4e0a\u8fdb\u884c\u5b9e\u9a8c\uff0c\u5e76\u4e25\u683c\u63a7\u5236\u5404\u79cd\u8d85\u53c2\u6570\u8bbe\u7f6e\uff0c\u4f7f\u7528\u76f8\u540c\u968f\u673a\u79cd\u5b50\u4e14\u516c\u5f00\u4ee3\u7801\u3002\u8fd9\u8868\u660e\u7814\u7a76\u8005\u5177\u6709\u4e25\u8c28\u3001\u7ec6\u81f4\u3001\u79d1\u5b66\u7684\u6001\u5ea6\u3002\u4e25\u8c28\u5bf9\u5f85\u5b9e\u9a8c\u7684\u6bcf\u4e00\u4e2a\u73af\u8282\uff0c\u786e\u4fdd\u5b9e\u9a8c\u7684\u53ef\u91cd\u590d\u6027\u548c\u7ed3\u679c\u7684\u53ef\u9760\u6027\uff0c\u6ce8\u91cd\u7ec6\u8282\uff0c\u4e0d\u653e\u8fc7\u4efb\u4f55\u53ef\u80fd\u5f71\u54cd\u5b9e\u9a8c\u7ed3\u679c\u7684\u56e0\u7d20\uff0c\u540c\u65f6\u5177\u6709\u5f00\u653e\u5171\u4eab\u7684\u7cbe\u795e\uff0c\u613f\u610f\u5c06\u7814\u7a76\u6210\u679c\u4ee5\u4ee3\u7801\u5f62\u5f0f\u516c\u5f00\uff0c\u65b9\u4fbf\u540c\u884c\u4ea4\u6d41\u548c\u9a8c\u8bc1\u3002\n\n### \u7b2c\u4e09\u6b65\uff1a\u5206\u6790MCTS - VS\u8d85\u53c2\u6570\u654f\u611f\u6027\u5206\u6790\u4f53\u73b0\u7684\u6027\u683c\n\u5bf9\u591a\u4e2a\u8d85\u53c2\u6570\u8fdb\u884c\u7ec6\u81f4\u7684\u5bf9\u6bd4\u5206\u6790\uff0c\u5e76\u4e14\u6839\u636e\u4e0d\u540c\u7ed3\u679c\u7ed9\u51fa\u5b9e\u9645\u5e94\u7528\u7684\u6307\u5bfc\u5efa\u8bae\u3002\u8fd9\u4f53\u73b0\u51fa\u7814\u7a76\u8005\u7684\u8010\u5fc3\u548c\u5168\u9762\u6027\uff0c\u613f\u610f\u82b1\u8d39\u5927\u91cf\u7cbe\u529b\u53bb\u7814\u7a76\u6bcf\u4e2a\u8d85\u53c2\u6570\u5bf9\u6a21\u578b\u7684\u5f71\u54cd\uff0c\u4e0d\u9057\u6f0f\u4efb\u4f55\u4e00\u4e2a\u53ef\u80fd\u5f71\u54cd\u6027\u80fd\u7684\u56e0\u7d20\uff0c\u540c\u65f6\u5177\u6709\u5f88\u5f3a\u7684\u5b9e\u8df5\u5bfc\u5411\u610f\u8bc6\uff0c\u80fd\u591f\u5c06\u7814\u7a76\u7ed3\u679c\u4e0e\u5b9e\u9645\u5e94\u7528\u7d27\u5bc6\u7ed3\u5408\uff0c\u4e3a\u5b9e\u9645\u5de5\u4f5c\u63d0\u4f9b\u6709\u4ef7\u503c\u7684\u53c2\u8003\u3002\n\n### \u7b2c\u56db\u6b65\uff1a\u5206\u6790MCTS\u7b56\u7565\u5408\u6210\u6846\u67b6\u4f53\u73b0\u7684\u6027\u683c\n\u5728\u6784\u5efa\u7b56\u7565\u5408\u6210\u6846\u67b6\u65f6\uff0c\u660e\u786e\u57fa\u672c\u6846\u67b6\u5e76\u9488\u5bf9\u9762\u4e34\u7684\u6311\u6218\u63d0\u51fa\u89e3\u51b3\u65b9\u6cd5\u3002\u8fd9\u663e\u793a\u51fa\u7814\u7a76\u8005\u5177\u6709\u6e05\u6670\u7684\u903b\u8f91\u601d\u7ef4\u548c\u89e3\u51b3\u95ee\u9898\u7684\u80fd\u529b\uff0c\u80fd\u591f\u6709\u6761\u4e0d\u7d0a\u5730\u6784\u5efa\u590d\u6742\u7684\u7814\u7a76\u6846\u67b6\uff0c\u5e76\u4e14\u5728\u9047\u5230\u95ee\u9898\u65f6\uff0c\u79ef\u6781\u601d\u8003\u5e76\u63d0\u51fa\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5c55\u73b0\u51fa\u575a\u97e7\u4e0d\u62d4\u548c\u5584\u4e8e\u5e94\u5bf9\u56f0\u96be\u7684\u6027\u683c\u7279\u8d28\u3002\n\n### \u7b2c\u4e94\u6b65\uff1a\u5206\u6790\u5206\u5c42\u641c\u7d22\u65b9\u6cd5\u4f53\u73b0\u7684\u6027\u683c\n\u63d0\u51fa\u5206\u5c42\u641c\u7d22\u65b9\u6cd5\u5e76\u9610\u8ff0\u5176\u539f\u7406\u548c\u4f18\u52bf\uff0c\u8bf4\u660e\u7814\u7a76\u8005\u5177\u6709\u521b\u65b0\u601d\u7ef4\u548c\u6df1\u5165\u601d\u8003\u7684\u80fd\u529b\uff0c\u80fd\u591f\u4ece\u65b0\u7684\u89d2\u5ea6\u63d0\u51fa\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u6df1\u5165\u5206\u6790\u8be5\u65b9\u6cd5\u7684\u4f18\u52bf\uff0c\u5bf9\u81ea\u5df1\u7684\u7814\u7a76\u6210\u679c\u6709\u6e05\u6670\u7684\u8ba4\u8bc6\u548c\u81ea\u4fe1\uff0c\u540c\u65f6\u4e5f\u4f53\u73b0\u51fa\u5176\u5bf9\u7814\u7a76\u7684\u6df1\u5ea6\u8ffd\u6c42\uff0c\u4e0d\u6ee1\u8db3\u4e8e\u8868\u9762\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u662f\u81f4\u529b\u4e8e\u627e\u5230\u66f4\u4f18\u3001\u66f4\u6709\u6548\u7684\u65b9\u6cd5\u3002\n\n### \u603b\u7ed3\n\u7efc\u5408\u6765\u770b\uff0c\u7247\u6bb5\u4e2d\u4eba\u7269\u5177\u6709\u521b\u65b0\u8fdb\u53d6\u3001\u4e25\u8c28\u7ec6\u81f4\u3001\u5f00\u653e\u5171\u4eab\u3001\u8010\u5fc3\u5168\u9762\u3001\u903b\u8f91\u6e05\u6670\u3001\u575a\u97e7\u4e0d\u62d4\u3001\u5584\u4e8e\u601d\u8003\u3001\u8ffd\u6c42\u6df1\u5ea6\u7b49\u6027\u683c\u7279\u70b9 \u3002  ", "ref_analysis_id": ""}, "__type__": "dreams_node"}}, "analysis_store/ref_analysis_info": {"": {"node_ids": ["fa39bc64-c7d4-42d7-bffc-5b27303f0f0a"], "metadata": {}}}, "analysis_store/metadata": {"fa39bc64-c7d4-42d7-bffc-5b27303f0f0a": {"analysis_hash": "", "ref_analysis_id": ""}}}