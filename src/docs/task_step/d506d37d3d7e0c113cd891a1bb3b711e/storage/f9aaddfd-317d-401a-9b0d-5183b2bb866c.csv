角色,内容,分镜
f9aaddfd-317d-401a-9b0d-5183b2bb866c,探讨计算模型在不同数据集与应用场景下的适用性与泛化能力,3
f9aaddfd-317d-401a-9b0d-5183b2bb866c,"### 问题

在探讨计算模型在不同数据集与应用场景下的适用性与泛化能力时，如何有效利用多模态学习（如CLIP结合图像和文本进行联合学习）和跨领域迁移学习（如在源领域预训练，在目标领域微调）来提升模型的泛化能力？具体来说，有哪些方法可以确保模型在面对新数据和场景时保持较高的鲁棒性和稳定性？此外，如何通过多模态融合（如利用Transformer进行多模态数据的联合建模）和泛化理论（如研究模型泛化的理论界限和优化方法）来进一步优化模型的跨领域应用性能？",3
f9aaddfd-317d-401a-9b0d-5183b2bb866c,"ref_ids: 454846660891728744, chunk_ids: 0, Score: 0.4434, Text: # 2. Related Work
Efficient learning for CLIP. One can improve learning efficiency through utilizing an enhanced training objective. Examples include image masking [ 17 ,36 ,54 ,70 ], unimodal self-supervision [ 34 ,42 ], fine-grained image-text alignment [ 71 ], contrastive learning in image-text-label space [ 68 ], and pairwise Sigmoid loss [ 76 ]. Recently, CLIPA [ 33 ] proposed training at multi-resolutions for costeffective CLIP training. These methods are complementary to our proposed method and can be exploited for further improvements.  

CLIP training dataset is often comprising noisy imagetext pairs obtained at web-scale. Since the original CLIP model [ 46 ], several works have demonstrated improved results on large-scale and filtered datasets [ 16 ,18 ,50 ,51 ,76 ]. Complementary to data collection and filtering, recent works show that using visually enriched synthetic captions generated from a pretrained captioning model, along with real captions, can improve the quality of CLIP models [ 31 ,44 ,69 ]. Our proposed reinforced multi-modal dataset also benefits from synthetically generated captions, which we show are crucial for improved learning efficiency.  

Previous works explored extending unimodal knowledge distillation [ 25 ] to vision-language models. DIME-FM [ 55 ]proposes using in-domain unimodal data for distillation with a focus on zero-shot classification. TinyCLIP [ 67 ] trains compact CLIP models via cross-modal affinity mimicking and weight inheritance. Multi-modal distillation is also explored in setups where the student is a fused vision-language model for specific tasks [ 30 ,63 ,64 ]. Our proposed multimodal reinforced training also includes cross-modal affinity mimicking [ 67 ] toward targets that are added to our reinforced datasets. Further, we extend unimodal model ensembling [ 32 ,45 ] to multimodal setup, and store targets obtained from an ensemble of CLIP models.  

Offline knowledge distillation methods [ 14 ,53 ,75 ] have been proposed recently to mitigate the training-time overhead cost due to running large teacher models. We extend the dataset reinforcement strategy [ 14 ] to the multi-modal setup of CLIP. Our proposed reinforced multi-modal datasets result in significant accuracy improvement without adding a training-time computational overhead.  

Efficient architectures for CLIP. Recently there have been a wide range of architectures that have shown great promise for accomplishing vision tasks on resource constraint devices. These architectures can be broadly classified into purely convolutional [ 11 ,22 ,26 ,27 ,40 ,47 ,49 ,60 ], transformer based [ 12 ,39 ,58 ] and convolution-transformer hybrids like [ 21 ,35 ,37 ,43 ,52 ,61 ]. Similarly there are transformer based [ 62 ] and convolution-transformer hybrids like [ 19 ,66 ] for text encoding. There have been works like [ 67 ], that prune ViT architectures to obtain smaller and faster CLIP models or works like [ 3 ] that reduce image-text tokens for faster inference of vision-language models. These models can still be quite large and inefficient to be deployed on a mobile device. In our work, we introduce an improved convolution-transformer hybrid architecture for both vision and text modalities, that improve over recent state-of-the-art like [ 21 ,37 ,43 ,52 ]. The optimizations introduced in [ 3 ,67 ]can be used to further improve efficiency of our models.

# 3. Multi-Modal Reinforced Training
Our multi-modal reinforced training leverages knowledge transfer from an image captioning model and a strong ensemble of pretrained CLIP models for training the target model. It consists of two main components: i) leveraging the knowledge of an image captioning model via synthetic captions, and ii) knowledge distillation of image-text alignments from an ensemble of strong pre-trained CLIP models. We follow the dataset reinforcement strategy of [ 14 ] and store the additional knowledge (synthetic captions and teacher embeddings) in the dataset (see Fig. 3 ), thereby avoiding any additional training time computational overhead such as evaluating the captioning model or the ensemble teacher. The proposed training strategy results in significant improvement in learning efficiency, i.e., reaching to certain target performance with less training budget and fewer samples.

# 3.1. Dataset Reinforcement
Synthetic captions. Image-text datasets used to train CLIP models are mostly sourced from the web, which is inherently noisy. Recent efforts such as DataComp [ 18 ] and data filtering networks [ 16 ] improve the quality of web-sourced datasets by using extensive filtering mechanisms. While these filtered datasets have lower noise, the captions may still not be descriptive enough. In order to boost the visual descriptiveness of the captions we use the popular CoCa [ 73 ]model and generate multiple synthetic captions ${\\bf\\boldsymbol{x}}_{\\mathrm{syn}}^{(i,s)}$ for each image $\\pmb{x}_{\\mathrm{img}}^{(i)}$ (see Fig. 3 a). Ablations on the number of synthetic captions generated per image are provided in Sec. 5.1 . Figure 5 shows some examples of synthetic captions generated by the CoCa model. Real captions in comparison to synthetic captions are generally more specific but noisier. We show (Tab. 2a ) a combination of both real and synthetic captions is crucial to obtain best zero-shot retrieval and classification performance.  

Image augmentations. For each image $\\pmb{x}_{\\mathrm{img}}^{(i)}$ , we generate multiple augmented images $\\hat{\\pmb{x}}_{\\mathrm{img}}^{(i,j)}$ using a parametrized  

augmentation function $\\boldsymbol{\\mathcal{A}}$ :  

$$
\\hat{\\pmb{x}}_{\\mathrm{img}}^{(i,j)}=\\mathcal{A}(\\pmb{x}_{\\mathrm{img}}^{(i)};\\pmb{a}^{(i,j)})\\,,
$$  

where $\\pmb{a}^{(i,j)}$ are the augmentation parameters that are sufficient to reproduce $\\hat{\\pmb{x}}_{\\mathrm{img}}^{(i,\\bar{j})}$ from $\\pmb{x}_{\\mathrm{img}}^{(i)}$ (see Fig. 3 a). Ablations on the number and different kinds of augmentations used per image are provided in Tabs. 3a and 11 , respectively.  

Ensemble teacher. Model ensembling is a widely used technique for creating a stronger model from a set of independently trained ones [ 32 ,45 ]. We extend this technique to multi-modal setup and use an ensemble of $K$ CLIP models as a strong teacher (see Sec. 5.1 for our teacher ablations). We compute the feature embeddings of these models for augmented images $\\hat{\\pmb{x}}_{\\mathrm{img}}^{(i,j)}$ and synthetic captions ${\\bf\\boldsymbol{x}}_{\\mathrm{syn}}^{(i,s)}$ obtaining $d_{k}$ -dimensional vectors $\\psi_{\\mathrm{img}}^{(i,j,k)}$ and $\\psi_{\\mathrm{syn}}^{(i,s,k)}$ for the $k$ -th teacher model. We also compute the teacher embeddings $\\psi_{\\mathrm{txt}}^{(i,k)}$ of the ground-truth captions $\\pmb{x}_{\\mathrm{txt}}^{(i)}$ (see Fig. 3 b). Reinforced dataset. We store the image augmentation parameters $\\pmb{a}^{(i,j)}$ , synthetic captions ${\\bf\\boldsymbol{x}}_{\\mathrm{syn}}^{(i,s)}$ , feature embeddings $\\psi_{\\mathrm{img}}^{(i,j,k)}$ ,$\\psi_{\\mathrm{syn}}^{(i,s,k)}$ and $\\psi_{\\mathrm{txt}}^{(i,k)}$ of the CLIP teachers as additional knowledge in the dataset along with the original image $\\pmb{x}_{\\mathrm{img}}^{(i)}$ and caption $\\pmb{x}_{\\mathrm{txt}}^{(i)}$ (see Fig. 3 c). Note that dataset reinforcement is a one-time cost that is amortized by several efficient model training and experimentation.",3
f9aaddfd-317d-401a-9b0d-5183b2bb866c,"ref_ids: 454895302186370932, chunk_ids: 10, Score: 0.2324, Text: # Model Reprogramming: Resource-Efficient Cross-Domain Machine Learning
Pin-Yu Chen 1  

1 IBM Research

# Abstract
In data-rich domains such as vision, language, and speech, deep learning prevails to deliver high-performance taskspecific models and can even learn general task-agnostic representations for efficient finetuning to downstream tasks. However, deep learning in resource-limited domains still faces multiple challenges including (i) limited data, (ii) constrained model development cost, and (iii) lack of adequate pre-trained models for effective finetuning. This paper provides an overview of model reprogramming to bridge this gap. Model reprogramming enables resource-efficient crossdomain machine learning by repurposing and reusing a welldeveloped pre-trained model from a source domain to solve tasks in a target domain without model finetuning, where the source and target domains can be vastly different. In many applications, model reprogramming outperforms transfer learning and training from scratch. This paper elucidates the methodology of model reprogramming, summarizes existing use cases, provides a theoretical explanation of the success of model reprogramming, and concludes with a discussion on open-ended research questions and opportunities. A list of model reprogramming studies is actively maintained and updated at https://github.com/IBM/model-reprogramming .",3
f9aaddfd-317d-401a-9b0d-5183b2bb866c,"ref_ids: 454984230906632244, chunk_ids: 7, Score: 0.2236, Text: # 1. Introduction
Over the past few decades, Machine Learning (ML) has demonstrated remarkable achievements across diverse areas such as Computer Vision, Natural Language and Speech Processing, or Robotics [ 5 ]. In general, most ML models rely on an over-simplified assumption, i.e., the training and testing data are independent and identically distributed, which does not always reflect real-world practices. In practical scenarios where the distribution of testing data diverges from that of training data, the performance of ML models often drops catastrophically due to the domain shift issue [ 28 ]. Additionally, obtaining or identifying the testing data before model deployment can be challenging in numerous applications. For instance, in biomedical applications where data characteristics vary across different equipment and institutions, gathering data from all potential domains in advance is impractical. Therefore, it is essential to have a solution that can improve the generalization capability of such ML models to adapt effectively to unseen domains.  

Domain Generalization (DG) has been proposed to address the challenge of training ML models using data from single or multiple source domains with the expectation that these models will perform well on unseen domains [41 ]. The majority of existing DG methods fall under the category of domain-invariant representation learning approach [ 13 ,20 ,25 ,29 ,33 ]. This approach relies on a broadly acknowledged assumption that each domain contains its own domain-specific features, which are biased towards spurious relations in the data, and that all domains share domain-invariant features, which are general and robust to any unseen domains. From this assumption, previous works propose methods that remove domain-specific features and distill domain-invariant features to achieve the generalization ability. Alternative approaches for DG encompass data augmentation [23 ,43 ,44 ,47 ], which involves exposing models to artificially generated domains, and meta-learning [1 ,6 ,12 ], an approach that emulates the domain shift during the meta-training phase. However, most methods require a centralized setting where all source domains are collected together. Consequently, these methods cannot be readily expanded to decentralized settings.  

Federated Learning (FL) [ 21 ] is an emerging decentralized learning paradigm widely adopted in various applications to cope with the increasing privacy concerns of data centralization [ 40 ]. Specifically, the paradigm works in a way that each client learns from their data and only aggregates local models’ parameters at a certain frequency at the central server to generate a global model. Notably, all data samples are kept within each client during the FL training process. Due to the nature of data decentralization, where each client owns a single source domain, as illustrated in Figure 1 , the FL paradigm poses further significant challenges for DG and limits the applicability of available DG methods. There have been some early attempts to address the DG problem in the FL scenario. For instance, Liu et al. [18 ] introduces a method that allows clients to share their image data in the frequency space with each other, thus relatively recovering the centralization process at each client. Similarly, Chen et al. [ 3 ] introduces another method that extracts and exchanges the style of local images among all clients. It is evident that these initial efforts employ a strategy that necessitates the sharing of partial client data, thereby compromising the data privacy constraints of FL to a certain extent. Although they show promising results, these methods can be overly complicated to implement in practice and lead to additional privacy risks during the FL training process.  

  
Figure 1. An overview of our proposed gPerXAN method for solving the FedDG problem.  

To address the aforementioned challenges, this paper introduces a novel architectural method for domain-invariant representation learning within the FL framework. The proposed method enhances the generalization ability while upholding the fundamental privacy principles of FL. Based on the effectiveness of discarding domain-specific information from learned features [ 25 ,30 ], we properly assemble Instance Normalization layers (IN) into Batch Normalization layers (BN) in well-known Convolutional Neural Networks (CNNs) using an explicit differential mixture as in Eqn ( 2 ). Moreover, thanks to the explicit property, the benefit of personalization in FL [ 27 ,35 ] can be incorporated into the normalization scheme using local BN sides. Specifically, during the FL training process, while IN sides are globally aggregated along with other model parameters, BN sides are updated locally without broadcasting. In addition, we argue that only relying on the ability to filter domain-specific features of IN while lacking guidance to distill domain-invariant representations directly might lead to suboptimal performance. Based on this observation, we introduce a simple yet highly effective regularization term to guide client models to directly capture domain-invariant representations that can be used by the global model’s classifier, which is aggregated from client models’ classifiers.  

To summarize, our main contributions in this paper are highlighted as follows:  

• Different from existing methods for DG in the FL scenario, we propose a novel method that concentrates on a personalized normalization scheme, global IN while local BN, for filtering domain-specific features and fully respecting the privacy-preserving principles of FL. • Furthermore, we propose a simple yet effective regularization term to introduce clear guidance to client models for directly capturing domain-invariant representations, further improving performance on unseen domains. • Finally, we conduct extensive experiments on two benchmark datasets, i.e., PACS and Office-Home, and a realworld medical dataset, Camelyon17, where our proposed method outperforms existing relevant ones.",3
