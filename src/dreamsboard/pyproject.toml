[tool.poetry]
name = "dreamsboard"
version = "0.4.0"
description = ""
authors = ["glide-the <2533736852@qq.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.32.5"
langchain = "^0.3.27"
langchain-openai = "^0.3.34"
langchain-community = "^0.3.30"
#faiss-gpu = "1.7.2"
Jinja2 = "^3.1.2"
openapi-pydantic = "^0.5.1"
tiktoken = "^0.11.0"
fsspec = "^2025.9.0"
kor = "^3.0.0"

fastapi = "^0.118.0"
uvicorn = "^0.37.0"
orjson = "^3.11.3"

json-repair = "^0.51.0"

# src/dreamsboard/dreamsboard/vector extras
SQLAlchemy = { version = "~2.0.43", optional = true }
faiss-cpu = { version = "~1.12.0", optional = true, python = ">=3.9,<3.15" }
sentence-transformers = { version = "~3.4.1", optional = true }
einops = { version = "~0.8.1", optional = true }


[tool.poetry.extras]

vector = ["SQLAlchemy", "faiss-cpu", "sentence-transformers", "einops"]


[tool.poetry.group.test.dependencies]
# The only dependencies that should be added are
# dependencies used for running tests (e.g., pytest, freezegun, response).
# Any dependencies that do not meet that criteria will be removed.
# The only dependencies that should be added are
# dependencies used for running tests (e.g., pytest, freezegun, response).
# Any dependencies that do not meet that criteria will be removed.
pytest = "^8.4.2"
freezegun = "^1.5.5"
pytest-mock = "^3.15.1"
syrupy = "^5.0.0"
pytest-watcher = "^0.4.3"
pytest-asyncio = "^1.2.0"
grandalf = "^0.8"
pytest-profiling = "^1.8.1"
responses = "^0.25.8"


[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
ruff = "^0.13.2"


[tool.poetry.group.codespell]
optional = true

[tool.poetry.group.codespell.dependencies]
codespell = "^2.4.1"


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
jupyter = "^1.1.1"
setuptools = "^80.9.0"



[tool.ruff]
exclude = [
    "tests/examples/non-utf8-encoding.py",
    "tests/integration_tests/examples/non-utf8-encoding.py",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
    "T201", # print
]

[tool.mypy]
ignore_missing_imports = "True"
disallow_untyped_defs = "True"
exclude = ["notebooks", "examples", "example_data"]

[tool.coverage.run]
omit = [
    "tests/*",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
# --strict-markers will raise errors on unknown marks.
# https://docs.pytest.org/en/7.1.x/how-to/mark.html#raising-errors-on-unknown-marks
#
# https://docs.pytest.org/en/7.1.x/reference/reference.html
# --strict-config       any warnings encountered while parsing the `pytest`
#                       section of the configuration file raise errors.
#
# https://github.com/tophat/syrupy
# --snapshot-warn-unused    Prints a warning on unused snapshots rather than fail the test suite.
addopts = "--strict-markers --strict-config --durations=5 -svv"
# Registering custom markers.
# https://docs.pytest.org/en/7.1.x/example/markers.html#registering-markers
markers = [
    "requires: mark tests as requiring a specific library",
    "scheduled: mark tests to run in scheduled testing",
    "compile: mark placeholder test used to compile integration tests without running them"
]
# asyncio_mode = "auto"


[tool.codespell]
skip = '.git,*.pdf,*.svg,*.pdf,*.yaml,*.ipynb,poetry.lock,*.min.js,*.css,package-lock.json,example_data,_dist,examples,*.trig,*.json,*.md,*.html,*.txt,*.csv'
# Ignore latin etc
ignore-regex = '.*(Stati Uniti|Tense=Pres).*'
# whats is a typo but used frequently in queries so kept as is
# aapply - async apply
# unsecure - typo but part of API, decided to not bother for now
ignore-words-list = 'momento,collison,ned,foor,reworkd,parth,whats,aapply,mysogyny,unsecure,damon,crate,aadd,symbl,precesses,accademia,nin'

[tool.poetry.plugins.dotenv]
ignore = "false"
dotenv = "dotenv:plugin"



# https://python-poetry.org/docs/repositories/
